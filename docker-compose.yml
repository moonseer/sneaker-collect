version: '3.8'

services:
  # Next.js application
  app:
    build:
      context: ./app
      target: development
    container_name: sneaker-collect-app
    restart: unless-stopped
    volumes:
      - ./app:/app
      - /app/node_modules
      - /app/.next
      - ./app/.env.local:/app/.env.local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_OPENAI_API_KEY=${NEXT_PUBLIC_OPENAI_API_KEY}
    depends_on:
      - db
      - redis
    networks:
      - sneaker-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    container_name: sneaker-collect-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - sneaker-network

  # Redis cache for performance optimization
  redis:
    image: redis:alpine
    container_name: sneaker-collect-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sneaker-network

  # Nginx for API proxy and static file serving
  nginx:
    image: nginx:alpine
    container_name: sneaker-collect-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - sneaker-network

networks:
  sneaker-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 